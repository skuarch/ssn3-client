package view.trees;

import controllers.ControllerTrees;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import javax.swing.SwingUtilities;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import view.frames.MainFrame;
import view.notifications.Notifications;
import view.util.TreeUtilities;

/**
 *
 * @author skuarch
 */
public class TreeCollectors extends FactoryTree {

    private static TreeCollectors INSTANCE = null;
    private Notifications notifications = null;
    private DefaultMutableTreeNode nodeWait = null;

    //==========================================================================
    /**
     * Creates new form TreeCollectors
     */
    private TreeCollectors() {

        this.notifications = new Notifications();
        this.nodeWait = new DefaultMutableTreeNode("wait");
        initComponents();
        onLoad();

    } // end 

    //==========================================================================
    private void onLoad() {
        setName("collectors");
        setDropTarget(new DropTarget(jTreeCollectors, this));
        remodelTree();
    } // end onLoad

    //==========================================================================
    private synchronized static void createInstance() {
        if (INSTANCE == null) {
            INSTANCE = new TreeCollectors();
        }
    }

    //==========================================================================
    public static TreeCollectors getInstance() {
        if (INSTANCE == null) {
            createInstance();
        }
        return INSTANCE;
    }

    //==========================================================================    
    @Override
    public void drop(DropTargetDropEvent dtde) {
        SwingUtilities.invokeLater(new Runnable() {

            public void run() {
                MainFrame.getInstance().control();
            }
        });
    } // end drop

    //==========================================================================
    private void remodelTree() {

        Thread t = new Thread(new Runnable() {

            public void run() {

                try {

                    jTreeCollectors.setModel(new DefaultTreeModel(nodeWait));
                    disableEnableComponents(false);
                    jTreeCollectors.setModel(new ControllerTrees().getCollectorModel());
                    disableEnableComponents(true);

                } catch (Exception e) {
                    notifications.error("error creating tree collectors", e);
                }
            }
        });
        t.start();
        t.setName("remodelTree");

    } // end remodelTree

    //==========================================================================
    private void disableEnableComponents(boolean flag) {
        jTreeCollectors.setEnabled(flag);
        jPopupMenu.setEnabled(flag);
        jMenuItemRefresh.setEnabled(flag);
    } // end disableComponents

    //==========================================================================
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu = new javax.swing.JPopupMenu();
        jMenuItemRefresh = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTreeCollectors = new javax.swing.JTree();

        jPopupMenu.setToolTipText("");

        jMenuItemRefresh.setText("refresh");
        jMenuItemRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRefreshActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItemRefresh);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("wait");
        jTreeCollectors.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTreeCollectors.setComponentPopupMenu(jPopupMenu);
        jTreeCollectors.setShowsRootHandles(false);
        jTreeCollectors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTreeCollectorsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTreeCollectors);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    //==========================================================================
    private void jMenuItemRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRefreshActionPerformed
        remodelTree();
    }//GEN-LAST:event_jMenuItemRefreshActionPerformed

    //==========================================================================
    private void jTreeCollectorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTreeCollectorsMouseClicked
        
        SwingUtilities.invokeLater(new Runnable() {

            public void run() {
                MainFrame.getInstance().control();
            }
        });
    }//GEN-LAST:event_jTreeCollectorsMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jMenuItemRefresh;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTreeCollectors;
    // End of variables declaration//GEN-END:variables

    //==========================================================================
    @Override
    public String getSelected() {
        TreePath treePath = jTreeCollectors.getSelectionPath();
        if (treePath == null) {
            return null;
        }
        return TreeUtilities.getSelect(treePath);
    } // end getSelected

    //==========================================================================
    public String getCollector() {
        TreePath treePath = jTreeCollectors.getSelectionPath();
        if (treePath == null) {
            return null;
        }
        return TreeUtilities.getSecondFromTree(treePath);
    } // end getCollector
} // end class
